{"ast":null,"code":"var _jsxFileName = \"/Users/fengyuanliu/workspace/fe-course-homework/codepan_clone/my-app/src/components/Editor.js\";\nimport React from 'react';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/mode/xml/xml';\nimport 'codemirror/mode/javascript/javascript';\nimport 'codemirror/mode/css/css';\nimport { Controlled as ControlledEditor } from 'react-codemirror2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Editor(props) {\n  const {\n    displayName,\n    language\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-title\",\n      children: [displayName, /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"O/C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ControlledEditor, {\n      onBeforeChange: handleChange,\n      value: value,\n      className: \"code-mirror-wrapper\",\n      options: {\n        //from code mirror lib\n        lineWrapping: true,\n        lint: true,\n        mode: language\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["/Users/fengyuanliu/workspace/fe-course-homework/codepan_clone/my-app/src/components/Editor.js"],"names":["React","Controlled","ControlledEditor","Editor","props","displayName","language","handleChange","value","lineWrapping","lint","mode"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA8C,mBAA9C;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnC,QAAM;AACFC,IAAAA,WADE;AAEFC,IAAAA;AAFE,MAGFF,KAHJ;AAIC,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACKC,WADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,gBAAD;AACI,MAAA,cAAc,EAAEE,YADpB;AAEI,MAAA,KAAK,EAAEC,KAFX;AAGI,MAAA,SAAS,EAAC,qBAHd;AAII,MAAA,OAAO,EAAE;AACL;AACAC,QAAAA,YAAY,EAAE,IAFT;AAGLC,QAAAA,IAAI,EAAE,IAHD;AAILC,QAAAA,IAAI,EAAEL;AAJD;AAJb;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;KAxBuBH,M","sourcesContent":["import React from 'react'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/material.css'\nimport 'codemirror/mode/xml/xml'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/css/css'\nimport { Controlled as ControlledEditor} from 'react-codemirror2'\n\nexport default function Editor(props) {\n   const {\n       displayName,\n       language\n   } = props\n    return (\n        <div className=\"editor-container\">\n            <div className=\"editor-title\">\n                {displayName}\n                <button>O/C</button>\n            </div>\n            <ControlledEditor\n                onBeforeChange={handleChange}\n                value={value}\n                className=\"code-mirror-wrapper\"\n                options={{\n                    //from code mirror lib\n                    lineWrapping: true,\n                    lint: true,\n                    mode: language\n                }}\n            />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}